{"ast":null,"code":"var _jsxFileName = \"/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/pages/user-accounts/ListUserAccounts.jsx\";\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { getUserAccounts, accountClose, accountReopen } from '../../backend/api';\nimport AppContext from '../../context/AppContext';\nimport { Container, Centered } from '../../common/StyleClasses';\nimport { Accordion, Panel } from 'baseui/accordion';\nimport { ListItem, ListItemLabel } from 'baseui/list';\nimport { Button } from 'baseui/button';\nimport TransactionForm from './forms/TransactionForm';\nimport UserAccountContext from '../../context/UserAccountContext';\nimport { Toast, KIND } from 'baseui/toast';\nimport ErrorBox from '../../common/ErrorBox';\nimport { useHistory } from 'react-router-dom';\n\nconst ListUserAccounts = () => {\n  const {\n    auth,\n    appErr,\n    setError\n  } = useContext(AppContext);\n  const history = useHistory();\n  const [accounts, setAccounts] = useState([]);\n  const [expandPanels, setExpandPanels] = useState(true);\n  const [notify, setNotify] = useState(\"\");\n  const loadAccounts = useCallback(() => {\n    getUserAccounts(auth.currentUser).then(response => {\n      setAccounts([]);\n      console.log(response.accounts);\n      setAccounts(response.accounts);\n      setExpandPanels(false);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }, [auth.currentUser, setError]);\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts]);\n  return /*#__PURE__*/React.createElement(UserAccountContext.Provider, {\n    value: {\n      loadAccounts,\n      setNotify\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"All Your Accounts at a Glance\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => history.push('/open'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Open Account\"), accounts.length < 1 && /*#__PURE__*/React.createElement(Centered, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"We couldn't find any accounts for you! Open one \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 65\n    }\n  }, \"here\"))), /*#__PURE__*/React.createElement(Accordion, {\n    onChange: ({\n      expanded\n    }) => setNotify(\"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, accounts.length > 0 && accounts.map(account => /*#__PURE__*/React.createElement(Panel, {\n    expanded: expandPanels,\n    key: account.number,\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Account #: \", account.number),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    endEnhancer: () => `$${account.amount.toFixed(2)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"Balance:\")), /*#__PURE__*/React.createElement(ListItem, {\n    endEnhancer: () => account.type === 'C' ? 'Checking' : 'Savings',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \"Type:\")), /*#__PURE__*/React.createElement(ListItem, {\n    endEnhancer: () => account.status === 'A' ? 'Active' : 'Inactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Status:\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), !!notify && /*#__PURE__*/React.createElement(Toast, {\n    place: true,\n    kind: KIND.positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 30\n    }\n  }, notify), account.status === \"A\" && /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    title: \"Deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TransactionForm, {\n    account: account,\n    transactionType: \"Deposit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Panel, {\n    title: \"Withdraw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TransactionForm, {\n    account: account,\n    transactionType: \"Withdraw\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Panel, {\n    title: \"Transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TransactionForm, {\n    account: account,\n    transactionType: \"Transfer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Panel, {\n    title: \"Close Account\",\n    expanded: expandPanels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, \"Are you sure you want to close this account?\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      accountClose(account.number, auth.currentUser).then(response => {\n        loadAccounts();\n        setNotify(\"Account Successfully closed!\");\n        setError(\"\");\n      }).catch(error => {\n        setError(error.message);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, \"Yes, Close Account\"), /*#__PURE__*/React.createElement(ErrorBox, {\n    error: appErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }))), account.status === \"I\" && /*#__PURE__*/React.createElement(Centered, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      accountReopen(account.number, auth.currentUser).then(response => {\n        loadAccounts();\n        setNotify(\"Account Successfully Reopened!\");\n        setError(\"\");\n      }).catch(error => {\n        setError(error.message);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Reopen Account\"))))))));\n};\n\nexport default ListUserAccounts;","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/pages/user-accounts/ListUserAccounts.jsx"],"names":["React","useEffect","useState","useContext","useCallback","getUserAccounts","accountClose","accountReopen","AppContext","Container","Centered","Accordion","Panel","ListItem","ListItemLabel","Button","TransactionForm","UserAccountContext","Toast","KIND","ErrorBox","useHistory","ListUserAccounts","auth","appErr","setError","history","accounts","setAccounts","expandPanels","setExpandPanels","notify","setNotify","loadAccounts","currentUser","then","response","console","log","catch","error","message","push","length","expanded","map","account","number","amount","toFixed","type","status","positive"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { getUserAccounts, accountClose, accountReopen } from '../../backend/api';\nimport AppContext from '../../context/AppContext';\nimport { Container, Centered } from '../../common/StyleClasses';\nimport { Accordion, Panel } from 'baseui/accordion';\nimport { ListItem, ListItemLabel } from 'baseui/list';\nimport { Button } from 'baseui/button';\nimport TransactionForm from './forms/TransactionForm';\nimport UserAccountContext from '../../context/UserAccountContext';\nimport { Toast, KIND } from 'baseui/toast';\nimport ErrorBox from '../../common/ErrorBox';\nimport { useHistory } from 'react-router-dom';\n\nconst ListUserAccounts = () => {\n\n  const { auth, appErr, setError } = useContext(AppContext);\n  const history = useHistory();\n\n  const [accounts, setAccounts] = useState([]);\n  const [expandPanels, setExpandPanels] = useState(true);\n  const [notify, setNotify] = useState(\"\");\n\n  const loadAccounts = useCallback(() => {\n    getUserAccounts(auth.currentUser)\n    .then((response) => {\n      setAccounts([]);\n      console.log(response.accounts);\n      setAccounts(response.accounts);\n      setExpandPanels(false);\n    })\n    .catch(error => {\n      setError(error.message);\n    });\n  }, [auth.currentUser, setError])\n\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts])\n\n  return (\n    <UserAccountContext.Provider value={{ loadAccounts, setNotify }}>\n      <Container>\n        <h2>All Your Accounts at a Glance</h2>\n        <Button onClick={() => history.push('/open')}>Open Account</Button>\n        {accounts.length < 1 && (\n          <Centered>\n            <h3>We couldn't find any accounts for you! Open one <Link to=\"/open\">here</Link></h3>\n          </Centered>\n        )}\n        <Accordion\n          onChange={({ expanded }) => setNotify(\"\")}\n        >\n          {accounts.length > 0 && accounts.map((account) => (\n            <Panel \n              expanded={expandPanels}\n              key={account.number} \n              title={\n                <span>Account #: {account.number}</span>\n              }\n            >\n              <ul>\n                <ListItem\n                  endEnhancer={() => `$${account.amount.toFixed(2)}`}\n                >\n                  <ListItemLabel>Balance:</ListItemLabel>\n                </ListItem>\n                <ListItem\n                  endEnhancer={() => account.type === 'C' ? 'Checking' : 'Savings'}\n                >\n                  <ListItemLabel>Type:</ListItemLabel>\n                </ListItem>\n                <ListItem\n                  endEnhancer={() => account.status === 'A' ? 'Active' : 'Inactive'}\n                >\n                  <ListItemLabel>Status:</ListItemLabel>\n                </ListItem>\n              \n                <hr/>\n                \n                {!!notify && <Toast place kind={KIND.positive}>{notify}</Toast>}\n                \n                {account.status === \"A\" && (\n                  <Accordion>\n                    <Panel title=\"Deposit\">\n                      <TransactionForm account={account} transactionType=\"Deposit\" />\n                    </Panel>\n                    <Panel title=\"Withdraw\">\n                      <TransactionForm account={account} transactionType=\"Withdraw\" />\n                    </Panel>\n                    <Panel title=\"Transfer\">\n                      <TransactionForm account={account} transactionType=\"Transfer\" />\n                    </Panel>\n                    <Panel title=\"Close Account\" expanded={expandPanels}>\n                      <h4>Are you sure you want to close this account?</h4>\n                      <Button onClick={() => {\n                        accountClose(account.number, auth.currentUser)\n                        .then(response => {\n                          loadAccounts();\n                          setNotify(\"Account Successfully closed!\")\n                          setError(\"\");\n                        })\n                        .catch(error => {\n                          setError(error.message)\n                        })\n                      }}>Yes, Close Account</Button>\n                      <ErrorBox error={appErr} />\n                    </Panel>\n                  </Accordion>\n                )}\n                {account.status === \"I\" && (\n                  <Centered>\n                    <Button onClick={() => {\n                      accountReopen(account.number, auth.currentUser)\n                      .then(response => {\n                        loadAccounts();\n                        setNotify(\"Account Successfully Reopened!\")\n                        setError(\"\");\n                      })\n                      .catch(error => {\n                        setError(error.message)\n                      })\n                    }}>Reopen Account</Button>\n                  </Centered>\n                )}\n              </ul>\n              \n            </Panel>\n          ))}\n        </Accordion>\n      </Container>\n    </UserAccountContext.Provider>\n  );\n};\n\nexport default ListUserAccounts;"]},"metadata":{},"sourceType":"module"}