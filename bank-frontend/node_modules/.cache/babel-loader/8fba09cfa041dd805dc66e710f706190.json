{"ast":null,"code":"import Axios from 'axios';\nimport { AppFactory } from './app';\nconst appRef = new AppFactory();\nconst baseURL = \"/\";\n\nconst instance = () => Axios.create({\n  baseURL\n});\n\nexport const initApp = () => new Promise((resolve, reject) => {\n  instance().get(\"/\").then(response => {\n    console.log(response);\n    let links = response.data._links;\n\n    for (let name in links) {\n      appRef.setLink(name, links[name].href.replace('{?page,size,sort}', ''));\n    }\n\n    console.log(appRef);\n    resolve({\n      success: true\n    });\n  }).catch(error => {\n    console.error(error);\n    reject(error);\n  });\n});\nexport const getAll = endpoint => new Promise((resolve, reject) => {\n  instance().get(`/${appRef.getRelativePath(endpoint)}/all`).then(response => {\n    console.log(response);\n  }).catch(error => {\n    console.error(error);\n    reject(error);\n  });\n});","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/backend/api.js"],"names":["Axios","AppFactory","appRef","baseURL","instance","create","initApp","Promise","resolve","reject","get","then","response","console","log","links","data","_links","name","setLink","href","replace","success","catch","error","getAll","endpoint","getRelativePath"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,MAAMC,MAAM,GAAG,IAAID,UAAJ,EAAf;AAEA,MAAME,OAAO,GAAG,GAAhB;;AAEA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,MAAN,CAAa;AAClCF,EAAAA;AADkC,CAAb,CAAvB;;AAIA,OAAO,MAAMG,OAAO,GAAG,MAAM,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5DL,EAAAA,QAAQ,GAAGM,GAAX,CAAe,GAAf,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,KAAK,GAAGH,QAAQ,CAACI,IAAT,CAAcC,MAA1B;;AAEA,SAAK,IAAIC,IAAT,IAAiBH,KAAjB,EAAwB;AACtBb,MAAAA,MAAM,CAACiB,OAAP,CAAeD,IAAf,EAAqBH,KAAK,CAACG,IAAD,CAAL,CAAYE,IAAZ,CAAiBC,OAAjB,CAAyB,mBAAzB,EAA8C,EAA9C,CAArB;AACD;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AAEAM,IAAAA,OAAO,CAAC;AACNc,MAAAA,OAAO,EAAE;AADH,KAAD,CAAP;AAGD,GAbD,EAcCC,KAdD,CAcOC,KAAK,IAAI;AACdX,IAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACAf,IAAAA,MAAM,CAACe,KAAD,CAAN;AACD,GAjBD;AAkBD,CAnB4B,CAAtB;AAsBP,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAc,IAAInB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnEL,EAAAA,QAAQ,GAAGM,GAAX,CAAgB,IAAGR,MAAM,CAACyB,eAAP,CAAuBD,QAAvB,CAAiC,MAApD,EACCf,IADD,CACMC,QAAQ,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAHD,EAICW,KAJD,CAIOC,KAAK,IAAI;AACdX,IAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACAf,IAAAA,MAAM,CAACe,KAAD,CAAN;AACD,GAPD;AAQD,CATmC,CAA7B","sourcesContent":["import Axios from 'axios';\nimport { AppFactory } from './app';\n\nconst appRef = new AppFactory();\n\nconst baseURL = \"/\";\n\nconst instance = () => Axios.create({\n  baseURL\n});\n\nexport const initApp = () => new Promise((resolve, reject) => {\n  instance().get(\"/\")\n  .then(response => {\n    console.log(response);\n    let links = response.data._links;\n    \n    for (let name in links) {\n      appRef.setLink(name, links[name].href.replace('{?page,size,sort}', ''))\n    }\n    console.log(appRef);\n\n    resolve({\n      success: true\n    });\n  })\n  .catch(error => {\n    console.error(error);\n    reject(error);\n  });\n});\n\n\nexport const getAll = (endpoint) => new Promise((resolve, reject) => {\n  instance().get(`/${appRef.getRelativePath(endpoint)}/all`)\n  .then(response => {\n    console.log(response);\n  })\n  .catch(error => {\n    console.error(error);\n    reject(error);\n  })\n})\n\n"]},"metadata":{},"sourceType":"module"}