{"ast":null,"code":"import _slicedToArray from\"/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useState,useEffect}from'react';import appReducer,{appInit,appSetError}from'./reducers/appReducer';import AppContext from'./context/AppContext';import AppRouter from'./routers/AppRouter';import{Client as Styletron}from'styletron-engine-atomic';import{Provider as StyletronProvider}from'styletron-react';import{LightTheme,BaseProvider}from'baseui';import{initApp}from'./backend/api';import authReducer from'./reducers/authReducer';function App(){var _useReducer=useReducer(appReducer,{isReady:false,error:\"\"}),_useReducer2=_slicedToArray(_useReducer,2),app=_useReducer2[0],appDis=_useReducer2[1];var _useReducer3=useReducer(authReducer,{currentUser:null,isLoggedIn:false,error:\"\"}),_useReducer4=_slicedToArray(_useReducer3,2),auth=_useReducer4[0],authDis=_useReducer4[1];useEffect(function(){appDis(appSetError(auth.error));},[auth.error]);var setError=function setError(){var error=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return appDis(appSetError(error));};var _useState=useState(new Styletron()),_useState2=_slicedToArray(_useState,1),engine=_useState2[0];useEffect(function(){initApp().then(function(_ref){var success=_ref.success;console.log(\"app initialized\");appDis(appInit(success));}).catch(function(error){console.error(error);});},[]);return/*#__PURE__*/React.createElement(AppContext.Provider,{value:{app:app,appDis:appDis,auth:auth,authDis:authDis,appErr:app.error,setError:setError}},/*#__PURE__*/React.createElement(StyletronProvider,{value:engine},/*#__PURE__*/React.createElement(BaseProvider,{theme:LightTheme},/*#__PURE__*/React.createElement(AppRouter,null))));}export default App;","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/App.js"],"names":["React","useReducer","useState","useEffect","appReducer","appInit","appSetError","AppContext","AppRouter","Client","Styletron","Provider","StyletronProvider","LightTheme","BaseProvider","initApp","authReducer","App","isReady","error","app","appDis","currentUser","isLoggedIn","auth","authDis","setError","engine","then","success","console","log","catch","appErr"],"mappings":"4MAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,UAAP,EAAqBC,OAArB,CAA8BC,WAA9B,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,OAASC,MAAM,GAAIC,CAAAA,SAAnB,KAAoC,yBAApC,CACA,OAASC,QAAQ,GAAIC,CAAAA,iBAArB,KAA8C,iBAA9C,CACA,OAASC,UAAT,CAAqBC,YAArB,KAAyC,QAAzC,CACA,OAASC,OAAT,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CAEA,QAASC,CAAAA,GAAT,EAAe,iBAEShB,UAAU,CAACG,UAAD,CAAa,CAC3Cc,OAAO,CAAE,KADkC,CAE3CC,KAAK,CAAE,EAFoC,CAAb,CAFnB,4CAENC,GAFM,iBAEDC,MAFC,kCAOWpB,UAAU,CAACe,WAAD,CAAc,CAC9CM,WAAW,CAAE,IADiC,CAE9CC,UAAU,CAAE,KAFkC,CAG9CJ,KAAK,CAAE,EAHuC,CAAd,CAPrB,6CAONK,IAPM,iBAOAC,OAPA,iBAabtB,SAAS,CAAC,UAAM,CACdkB,MAAM,CAACf,WAAW,CAACkB,IAAI,CAACL,KAAN,CAAZ,CAAN,CACD,CAFQ,CAEN,CAACK,IAAI,CAACL,KAAN,CAFM,CAAT,CAIA,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAACP,CAAAA,KAAD,2DAAS,EAAT,OAAgBE,CAAAA,MAAM,CAACf,WAAW,CAACa,KAAD,CAAZ,CAAtB,EAAjB,CAjBa,cAmBMjB,QAAQ,CAAC,GAAIQ,CAAAA,SAAJ,EAAD,CAnBd,wCAmBNiB,MAnBM,eAqBbxB,SAAS,CAAC,UAAM,CACdY,OAAO,GACNa,IADD,CACM,cAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrBC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACAV,MAAM,CAAChB,OAAO,CAACwB,OAAD,CAAR,CAAN,CACD,CAJD,EAKCG,KALD,CAKO,SAAAb,KAAK,CAAI,CACdW,OAAO,CAACX,KAAR,CAAcA,KAAd,EACD,CAPD,EAQD,CATQ,CASN,EATM,CAAT,CAWA,mBACE,oBAAC,UAAD,CAAY,QAAZ,EAAqB,KAAK,CAAE,CAAEC,GAAG,CAAHA,GAAF,CAAOC,MAAM,CAANA,MAAP,CAAeG,IAAI,CAAJA,IAAf,CAAqBC,OAAO,CAAPA,OAArB,CAA8BQ,MAAM,CAAEb,GAAG,CAACD,KAA1C,CAAiDO,QAAQ,CAARA,QAAjD,CAA5B,eACE,oBAAC,iBAAD,EAAmB,KAAK,CAAEC,MAA1B,eACE,oBAAC,YAAD,EAAc,KAAK,CAAEd,UAArB,eACE,oBAAC,SAAD,MADF,CADF,CADF,CADF,CASD,CAED,cAAeI,CAAAA,GAAf","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react';\nimport appReducer, { appInit, appSetError } from './reducers/appReducer';\nimport AppContext from './context/AppContext';\nimport AppRouter from './routers/AppRouter';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider } from 'baseui';\nimport { initApp } from './backend/api';\nimport authReducer from './reducers/authReducer';\n\nfunction App() {\n\n  const [app, appDis] = useReducer(appReducer, {\n    isReady: false,\n    error: \"\"\n  });\n\n  const [auth, authDis] = useReducer(authReducer, {\n    currentUser: null,\n    isLoggedIn: false,\n    error: \"\"\n  });\n\n  useEffect(() => {\n    appDis(appSetError(auth.error))\n  }, [auth.error]);\n\n  const setError = (error = \"\") => appDis(appSetError(error));\n\n  const [engine, ] = useState(new Styletron());\n\n  useEffect(() => {\n    initApp()\n    .then(({ success }) => {\n      console.log(\"app initialized\");\n      appDis(appInit(success));\n    })\n    .catch(error => {\n      console.error(error);\n    })\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ app, appDis, auth, authDis, appErr: app.error, setError }}>\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={LightTheme}>\n          <AppRouter />\n        </BaseProvider>\n      </StyletronProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}