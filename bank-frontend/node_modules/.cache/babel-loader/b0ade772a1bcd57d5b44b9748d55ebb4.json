{"ast":null,"code":"var _jsxFileName = \"/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/pages/login/LoginPage.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { Container, MaskedPinInput } from '../../common/StyleClasses';\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../../context/AppContext';\nimport { Card, StyledBody } from 'baseui/card';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { userLogin } from '../../backend/api';\nimport { authLogin } from '../../reducers/authReducer';\nimport ErrorBox from '../../common/ErrorBox';\n\nconst LoginPage = () => {\n  const {\n    setError,\n    appErr,\n    authDis\n  } = useContext(AppContext);\n  const history = useHistory();\n  const [pin, setPin] = useState([\"\", \"\", \"\", \"\"]);\n  const [username, setUsername] = useState('');\n  const [buttonLoad, setButtonLoad] = useState(false);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      setButtonLoad(true);\n      userLogin(username, parseInt(pin.join(\"\"))).then(response => {\n        authDis(authLogin(response.user));\n        history.push(\"/\");\n      }).catch(error => {\n        console.error(error);\n        setError(error.message);\n        setButtonLoad(false);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    label: () => \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    label: () => \"Pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaskedPinInput, {\n    type: \"password\",\n    values: pin,\n    onChange: ({\n      values\n    }) => setPin(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ErrorBox, {\n    error: appErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    isLoading: buttonLoad,\n    disabled: !username || !pin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/pages/login/LoginPage.jsx"],"names":["React","useContext","useState","Container","MaskedPinInput","useHistory","AppContext","Card","StyledBody","FormControl","Input","Button","userLogin","authLogin","ErrorBox","LoginPage","setError","appErr","authDis","history","pin","setPin","username","setUsername","buttonLoad","setButtonLoad","e","preventDefault","parseInt","join","then","response","user","push","catch","error","console","message","target","value","values"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Container, MaskedPinInput } from '../../common/StyleClasses';\nimport { useHistory } from 'react-router-dom';\nimport AppContext from '../../context/AppContext';\nimport { Card, StyledBody } from 'baseui/card';\nimport { FormControl } from 'baseui/form-control';\nimport { Input } from 'baseui/input';\nimport { Button } from 'baseui/button';\nimport { userLogin } from '../../backend/api';\nimport { authLogin } from '../../reducers/authReducer';\nimport ErrorBox from '../../common/ErrorBox';\n\nconst LoginPage = () => {\n  const { setError, appErr, authDis } = useContext(AppContext);\n  const history = useHistory();\n  const [pin, setPin] = useState([\"\", \"\", \"\", \"\"]);\n  const [username, setUsername] = useState('');\n  const [buttonLoad, setButtonLoad] = useState(false);\n\n  return (\n    <Container>\n      <Card>\n        <StyledBody>\n          <h2>Login</h2>\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            setButtonLoad(true);\n\n            userLogin(username, parseInt(pin.join(\"\")))\n            .then((response) => {\n              authDis(authLogin(response.user));\n              history.push(\"/\")\n            })\n            .catch(error => {\n              console.error(error);\n              setError(error.message);\n              setButtonLoad(false);\n            });\n\n            \n          }}>\n            <FormControl\n              label={() => \"Username\"}\n            >\n              <Input \n                value={username}\n                onChange={e => setUsername(e.target.value)}\n              />\n            </FormControl>\n\n            <FormControl\n              label={() => \"Pin\"}\n            >\n              <MaskedPinInput\n                type=\"password\"\n                values={pin}\n                onChange={({ values }) => setPin(values)}\n              />\n            </FormControl>\n            <ErrorBox error={appErr} />\n            <Button\n              isLoading={buttonLoad}\n              disabled={!username || !pin}\n            >\n              Login\n            </Button>\n          </form>\n        </StyledBody>\n      </Card>\n    </Container>\n  );\n};\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}