{"ast":null,"code":"var _jsxFileName = \"/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/App.js\";\nimport React, { useReducer, useState, useEffect } from 'react';\nimport appReducer, { appInit, appSetError } from './reducers/appReducer';\nimport AppContext from './context/AppContext';\nimport AppRouter from './routers/AppRouter';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider } from 'baseui';\nimport { initApp, getAllCustomers } from './backend/api';\nimport authReducer from './reducers/authReducer';\n\nfunction App() {\n  const [app, appDis] = useReducer(appReducer, {\n    isReady: false,\n    error: \"\"\n  });\n  const [auth, authDis] = useReducer(authReducer, {\n    currentUser: null,\n    isLoggedIn: false,\n    error: \"\"\n  });\n  useEffect(() => {\n    appDis(appSetError(auth.error));\n  }, [auth.error]);\n  const [engine] = useState(new Styletron());\n  useEffect(() => {\n    initApp().then(({\n      success\n    }) => {\n      console.log(\"app initialized\");\n      appDis(appInit(success));\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      app,\n      appDis,\n      auth,\n      authDis,\n      apError: app.error\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyletronProvider, {\n    value: engine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseProvider, {\n    theme: LightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/App.js"],"names":["React","useReducer","useState","useEffect","appReducer","appInit","appSetError","AppContext","AppRouter","Client","Styletron","Provider","StyletronProvider","LightTheme","BaseProvider","initApp","getAllCustomers","authReducer","App","app","appDis","isReady","error","auth","authDis","currentUser","isLoggedIn","engine","then","success","console","log","catch","apError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,IAAqBC,OAArB,EAA8BC,WAA9B,QAAiD,uBAAjD;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,yBAApC;AACA,SAASC,QAAQ,IAAIC,iBAArB,QAA8C,iBAA9C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,QAAzC;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,eAAzC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,UAAU,CAACG,UAAD,EAAa;AAC3CiB,IAAAA,OAAO,EAAE,KADkC;AAE3CC,IAAAA,KAAK,EAAE;AAFoC,GAAb,CAAhC;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,UAAU,CAACgB,WAAD,EAAc;AAC9CQ,IAAAA,WAAW,EAAE,IADiC;AAE9CC,IAAAA,UAAU,EAAE,KAFkC;AAG9CJ,IAAAA,KAAK,EAAE;AAHuC,GAAd,CAAlC;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,CAACd,WAAW,CAACiB,IAAI,CAACD,KAAN,CAAZ,CAAN;AACD,GAFQ,EAEN,CAACC,IAAI,CAACD,KAAN,CAFM,CAAT;AAIA,QAAM,CAACK,MAAD,IAAazB,QAAQ,CAAC,IAAIQ,SAAJ,EAAD,CAA3B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,GACNa,IADD,CACM,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAX,MAAAA,MAAM,CAACf,OAAO,CAACwB,OAAD,CAAR,CAAN;AACD,KAJD,EAKCG,KALD,CAKOV,KAAK,IAAI;AACdQ,MAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEH,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeG,MAAAA,IAAf;AAAqBC,MAAAA,OAArB;AAA8BS,MAAAA,OAAO,EAAEd,GAAG,CAACG;AAA3C,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEK,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEd,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD;;AAED,eAAeK,GAAf","sourcesContent":["import React, { useReducer, useState, useEffect } from 'react';\nimport appReducer, { appInit, appSetError } from './reducers/appReducer';\nimport AppContext from './context/AppContext';\nimport AppRouter from './routers/AppRouter';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider } from 'baseui';\nimport { initApp, getAllCustomers } from './backend/api';\nimport authReducer from './reducers/authReducer';\n\nfunction App() {\n\n  const [app, appDis] = useReducer(appReducer, {\n    isReady: false,\n    error: \"\"\n  });\n\n  const [auth, authDis] = useReducer(authReducer, {\n    currentUser: null,\n    isLoggedIn: false,\n    error: \"\"\n  });\n\n  useEffect(() => {\n    appDis(appSetError(auth.error))\n  }, [auth.error]);\n\n  const [engine, ] = useState(new Styletron());\n\n  useEffect(() => {\n    initApp()\n    .then(({ success }) => {\n      console.log(\"app initialized\");\n      appDis(appInit(success));\n    })\n    .catch(error => {\n      console.error(error);\n    })\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ app, appDis, auth, authDis, apError: app.error }}>\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={LightTheme}>\n          <AppRouter />\n        </BaseProvider>\n      </StyletronProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}