{"ast":null,"code":"import _slicedToArray from\"/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext,useCallback}from'react';import{getUserAccounts,accountClose,accountReopen}from'../../backend/api';import AppContext from'../../context/AppContext';import{Container,Centered}from'../../common/StyleClasses';import{Accordion,Panel}from'baseui/accordion';import{ListItem,ListItemLabel}from'baseui/list';import{Button}from'baseui/button';import TransactionForm from'./forms/TransactionForm';import UserAccountContext from'../../context/UserAccountContext';import{Toast,KIND}from'baseui/toast';import ErrorBox from'../../common/ErrorBox';import{useHistory,Link}from'react-router-dom';var ListUserAccounts=function ListUserAccounts(){var _useContext=useContext(AppContext),auth=_useContext.auth,appErr=_useContext.appErr,setError=_useContext.setError;var history=useHistory();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),accounts=_useState2[0],setAccounts=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),expandPanels=_useState4[0],setExpandPanels=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),notify=_useState6[0],setNotify=_useState6[1];var loadAccounts=useCallback(function(){getUserAccounts(auth.currentUser).then(function(response){setAccounts([]);console.log(response.accounts);setAccounts(response.accounts);setExpandPanels(false);}).catch(function(error){setError(error.message);});},[auth.currentUser,setError]);useEffect(function(){loadAccounts();},[loadAccounts]);return/*#__PURE__*/React.createElement(UserAccountContext.Provider,{value:{loadAccounts:loadAccounts,setNotify:setNotify}},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,\"All Your Accounts at a Glance\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return history.push('/open');}},\"Open Account\"),accounts.length<1&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Centered,null,/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(Centered,null,/*#__PURE__*/React.createElement(\"h3\",null,\"We couldn't find any accounts for you! Open one \",/*#__PURE__*/React.createElement(Link,{to:\"/open\"},\"here\")))),/*#__PURE__*/React.createElement(Accordion,{onChange:function onChange(_ref){var expanded=_ref.expanded;return setNotify(\"\");}},accounts.length>0&&accounts.map(function(account){return/*#__PURE__*/React.createElement(Panel,{expanded:expandPanels,key:account.number,title:/*#__PURE__*/React.createElement(\"span\",null,\"Account #: \",account.number)},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(ListItem,{endEnhancer:function endEnhancer(){return\"$\".concat(account.amount.toFixed(2));}},/*#__PURE__*/React.createElement(ListItemLabel,null,\"Balance:\")),/*#__PURE__*/React.createElement(ListItem,{endEnhancer:function endEnhancer(){return account.type;}},/*#__PURE__*/React.createElement(ListItemLabel,null,\"Type:\")),/*#__PURE__*/React.createElement(ListItem,{endEnhancer:function endEnhancer(){return account.status==='A'?'Active':'Inactive';}},/*#__PURE__*/React.createElement(ListItemLabel,null,\"Status:\")),/*#__PURE__*/React.createElement(\"hr\",null),!!notify&&/*#__PURE__*/React.createElement(Toast,{place:true,kind:KIND.positive},notify),account.status===\"A\"&&/*#__PURE__*/React.createElement(Accordion,null,/*#__PURE__*/React.createElement(Panel,{title:\"Deposit\"},/*#__PURE__*/React.createElement(TransactionForm,{account:account,transactionType:\"Deposit\"})),/*#__PURE__*/React.createElement(Panel,{title:\"Withdraw\"},/*#__PURE__*/React.createElement(TransactionForm,{account:account,transactionType:\"Withdraw\"})),/*#__PURE__*/React.createElement(Panel,{title:\"Transfer\"},/*#__PURE__*/React.createElement(TransactionForm,{account:account,transactionType:\"Transfer\"})),/*#__PURE__*/React.createElement(Panel,{title:\"Close Account\",expanded:expandPanels},/*#__PURE__*/React.createElement(\"h4\",null,\"Are you sure you want to close this account?\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){accountClose(account.number,auth.currentUser).then(function(response){loadAccounts();setNotify(\"Account Successfully closed!\");setError(\"\");}).catch(function(error){setError(error.message);});}},\"Yes, Close Account\"),/*#__PURE__*/React.createElement(ErrorBox,{error:appErr}))),account.status===\"I\"&&/*#__PURE__*/React.createElement(Centered,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){accountReopen(account.number,auth.currentUser).then(function(response){loadAccounts();setNotify(\"Account Successfully Reopened!\");setError(\"\");}).catch(function(error){setError(error.message);});}},\"Reopen Account\"))));}))));};export default ListUserAccounts;","map":{"version":3,"sources":["/Users/rhopperlowe/Desktop/School/Spring 2020/Spring2020_workspace/bank/bank-frontend/src/pages/user-accounts/ListUserAccounts.jsx"],"names":["React","useEffect","useState","useContext","useCallback","getUserAccounts","accountClose","accountReopen","AppContext","Container","Centered","Accordion","Panel","ListItem","ListItemLabel","Button","TransactionForm","UserAccountContext","Toast","KIND","ErrorBox","useHistory","Link","ListUserAccounts","auth","appErr","setError","history","accounts","setAccounts","expandPanels","setExpandPanels","notify","setNotify","loadAccounts","currentUser","then","response","console","log","catch","error","message","push","length","expanded","map","account","number","amount","toFixed","type","status","positive"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { getUserAccounts, accountClose, accountReopen } from '../../backend/api';\nimport AppContext from '../../context/AppContext';\nimport { Container, Centered } from '../../common/StyleClasses';\nimport { Accordion, Panel } from 'baseui/accordion';\nimport { ListItem, ListItemLabel } from 'baseui/list';\nimport { Button } from 'baseui/button';\nimport TransactionForm from './forms/TransactionForm';\nimport UserAccountContext from '../../context/UserAccountContext';\nimport { Toast, KIND } from 'baseui/toast';\nimport ErrorBox from '../../common/ErrorBox';\nimport { useHistory, Link } from 'react-router-dom';\n\nconst ListUserAccounts = () => {\n\n  const { auth, appErr, setError } = useContext(AppContext);\n  const history = useHistory();\n\n  const [accounts, setAccounts] = useState([]);\n  const [expandPanels, setExpandPanels] = useState(true);\n  const [notify, setNotify] = useState(\"\");\n\n  const loadAccounts = useCallback(() => {\n    getUserAccounts(auth.currentUser)\n    .then((response) => {\n      setAccounts([]);\n      console.log(response.accounts);\n      setAccounts(response.accounts);\n      setExpandPanels(false);\n    })\n    .catch(error => {\n      setError(error.message);\n    });\n  }, [auth.currentUser, setError])\n\n  useEffect(() => {\n    loadAccounts();\n  }, [loadAccounts])\n\n  return (\n    <UserAccountContext.Provider value={{ loadAccounts, setNotify }}>\n      <Container>\n        <h2>All Your Accounts at a Glance</h2>\n        <Button onClick={() => history.push('/open')}>Open Account</Button>\n        {accounts.length < 1 && (\n          <div>\n            <Centered>\n              <hr />\n            </Centered>\n            <Centered>\n              <h3>We couldn't find any accounts for you! Open one <Link to=\"/open\">here</Link></h3>\n            </Centered>\n          </div>\n        )}\n        <Accordion\n          onChange={({ expanded }) => setNotify(\"\")}\n        >\n          {accounts.length > 0 && accounts.map((account) => (\n            <Panel \n              expanded={expandPanels}\n              key={account.number} \n              title={\n                <span>Account #: {account.number}</span>\n              }\n            >\n              <ul>\n                <ListItem\n                  endEnhancer={() => `$${account.amount.toFixed(2)}`}\n                >\n                  <ListItemLabel>Balance:</ListItemLabel>\n                </ListItem>\n                <ListItem\n                  endEnhancer={() => account.type}\n                >\n                  <ListItemLabel>Type:</ListItemLabel>\n                </ListItem>\n                <ListItem\n                  endEnhancer={() => account.status === 'A' ? 'Active' : 'Inactive'}\n                >\n                  <ListItemLabel>Status:</ListItemLabel>\n                </ListItem>\n              \n                <hr/>\n                \n                {!!notify && <Toast place kind={KIND.positive}>{notify}</Toast>}\n                \n                {account.status === \"A\" && (\n                  <Accordion>\n                    <Panel title=\"Deposit\">\n                      <TransactionForm account={account} transactionType=\"Deposit\" />\n                    </Panel>\n                    <Panel title=\"Withdraw\">\n                      <TransactionForm account={account} transactionType=\"Withdraw\" />\n                    </Panel>\n                    <Panel title=\"Transfer\">\n                      <TransactionForm account={account} transactionType=\"Transfer\" />\n                    </Panel>\n                    <Panel title=\"Close Account\" expanded={expandPanels}>\n                      <h4>Are you sure you want to close this account?</h4>\n                      <Button onClick={() => {\n                        accountClose(account.number, auth.currentUser)\n                        .then(response => {\n                          loadAccounts();\n                          setNotify(\"Account Successfully closed!\")\n                          setError(\"\");\n                        })\n                        .catch(error => {\n                          setError(error.message)\n                        })\n                      }}>Yes, Close Account</Button>\n                      <ErrorBox error={appErr} />\n                    </Panel>\n                  </Accordion>\n                )}\n                {account.status === \"I\" && (\n                  <Centered>\n                    <Button onClick={() => {\n                      accountReopen(account.number, auth.currentUser)\n                      .then(response => {\n                        loadAccounts();\n                        setNotify(\"Account Successfully Reopened!\")\n                        setError(\"\");\n                      })\n                      .catch(error => {\n                        setError(error.message)\n                      })\n                    }}>Reopen Account</Button>\n                  </Centered>\n                )}\n              </ul>\n              \n            </Panel>\n          ))}\n        </Accordion>\n      </Container>\n    </UserAccountContext.Provider>\n  );\n};\n\nexport default ListUserAccounts;"]},"metadata":{},"sourceType":"module"}